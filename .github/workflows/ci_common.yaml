name: Reusable Workflow Example
on:
  workflow_call:
    inputs:
      sonar_host:
        required: true
        type: string
      environment:
        required: true
        type: string
      channel_id:
        required: true
        type: string
      github_actor:
        required: true
        type: string
      project_name:
        required: true
        type: string
      version_dependency:
        required: true
        type: string
    secrets:
      SLACK_BOT_TOKEN:
        required: true
      SONAR_TOKEN:
        required: true
      SONAR_HOST_URL:
        required: true
      DEPENDENCY_TRACK_API_KEY:
        required: true
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: clone repo
        uses: actions/checkout@v4
      - name: environment
        run: |
          echo "${{ inputs.environment }} environment"
      - name: Sonar host
        run: |
          echo "Sonar url: ${{ inputs.sonar_host }}"
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv
          coverage: none
      - name: Installer les dependences
        run: composer install --prefer-dist --no-interaction
      - name: Copy file .env.exemple to .env
        run: cp .env.example .env
      - name: Generate key
        run: php artisan key:generate
      - name: Execution des tests
        run: |
            echo "Execution des tests"
      #- name: SonarQube Scan
      #  uses: SonarSource/sonarqube-scan-action@master
      #  env: 
      #    SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
      #    SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Generate SBOM with CycloneDX
        run: |
          composer require --dev cyclonedx/cyclonedx-php-composer
          composer update
          composer CycloneDX:make-sbom --output-file=sbom.xml
      - name: Dependency Track
        uses: neerajsu/dependency-track-gh-action@v1.0.4
        with:
          serverHostBaseUrl: 'https://depedency.server.url.company.com'
          apikey: ${{ secrets.DEPENDENCY_TRACK_API_KEY }}
          projectname: ${{ inputs.project_name }}
          projectversion: ${{ inputs.version_dependency }}
          bomFilePath: './sbom.xml'
          timeoutInSecs: '10'
          failOnSeverityLevel: 'CRITICAL'
      # - name: Dependency Track
      #   #run: |
      #     curl -X "POST" "http://51.20.134.126:8081/api/v1/bom" \
      #     -H 'Content-Type: multipart/form-data' \
      #     -H "X-Api-Key: ${{ secrets.DEPENDENCY_TRACK_API_KEY }}" \
      #     -F "projectName=${{ inputs.project_name }}" \
      #     -F "projectVersion=1.0" \
      #     -F "bom=@./sbom.xml"
      #- name: 
      #  run: |
      #    docker build . -f Dockerfile --tag custom-laravel:0.0.1
      - name: Post to a Slack channel
        if: failure()
        id: slack
        uses: slackapi/slack-github-action@v1.25.0
        with:
          channel-id: ${{ inputs.channel_id }}
          slack-message: "GitHub build result: ${{ job.status }}\n${{ inputs.github_actor }}\n${{ runner.os }}"
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}


